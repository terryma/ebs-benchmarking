!!!
html
  head
    title= title
    link(rel='stylesheet', href='/stylesheets/style.css')
    link(rel='stylesheet', href='/stylesheets/Aristo/jquery-ui-1.8.7.custom.css')
    script(type='text/javascript', src='https://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js')
    script(type='text/javascript', src='https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.13/jquery-ui.min.js')
    script(type='text/javascript', src='/javascripts/json2.js')
    script(type='text/javascript', src='/javascripts/jquery.form.js')
    script(type='text/javascript', src='/javascripts/jquery.styletable.js')
    script(type='text/javascript')
        $(function() {

            var debug = false;

            // decorate the buttons
            $('.buttonset').buttonset();

            // register the form
            var options = {
                dataType: 'json',
                success: function(response) {
                    if (debug) {
                        $('#debug').append(JSON.stringify(response, null, '\t'));
                    }
                    var file = response.file;
                    $.get(file, function(content) {
                        $('#test-output').text(content);
                        // parse the content to populate the summary section
                        var regex = /[READ:|WRITE:].*aggrb=(.*?),/g;
                        var cells = [];
                        var match;
                        while (match = regex.exec(content)) {
                            cells.push(match[1]);
                        }
                        $('#summary-table tbody tr td').each(function(index) {
                            // Don't do anything for the first column
                            if (index % 7 == 0) {
                                return;
                            }
                            var text = cells.shift();
                            // These columns are read/write so shift twice
                            if (index % 7 == 3 || index % 7 == 6) {
                                text += " / " + cells.shift();
                            }
                            $(this).text(text);
                        });


                    }).error(function() {
                        $('#test-output').text("No test result found for the above config (" + file + " returned a 404)");
                        $('#summary-table tbody tr td').each(function(index) {
                            // Don't do anything for the first column
                            if (index % 7 == 0) {
                                return;
                            }
                            $(this).text("");
                        });
                    });
                }
            };
            $('#form').ajaxForm(options);

            // store all the radios 
            var radiosArr = [];
            $('.field').each(function() {
                var $radios = $(this).find('input:radio');
                radiosArr.push($radios);
            });

            // select the first element of each options, and register the change event
            $.each(radiosArr, function(index) {
                this.filter(':first').attr('checked', true).trigger('change');
                this.change(function(){
                    $('#form').submit();
                });
            });

            // do an initial submit
            $('#form').submit();

            // init the summary table
            $('#summary-table').styleTable();
        });
  body!= body
